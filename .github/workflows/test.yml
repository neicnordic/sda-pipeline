name: Go test

on:
  push:
    paths:
      - '**.go'
      - 'go.*'
      - 'schemas/**'

jobs:

  build:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: ['1.20', '1.19']
    steps:

      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Create certificates
        run: |
          cd dev_utils
          bash ./make_certs.sh
          cd ..

      - name: Start MQ and DB
        run: docker-compose -f dev_utils/compose-no-tls.yml up -d db mq

      - name: Test
        run: go test --tags=integration -v -coverprofile=coverage.txt -covermode=atomic ./...

      - name: Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unittests
          fail_ci_if_error: false
