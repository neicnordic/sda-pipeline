api:
  cacert: "./dev_utils/certs/ca.pem"
  serverCert: "./dev_utils/certs/client.pem"
  serverKey: "./dev_utils/certs/client-key.pem"

archive:
  type: ""
  # S3 backend
  url: "https://localhost"
  port: 9000
  accesskey: "access"
  secretkey: "secretkey"
  bucket: "archive"
  chunksize: 32
  cacert: "./dev_utils/certs/ca.pem"
  # posix backend
  location: "/tmp"

backup:
  type: ""
  # S3 backend
  url: "https://localhost"
  port: 9000
  accesskey: "access"
  secretkey: "secretkey"
  bucket: "backup"
  chunksize: 5
  cacert: "./dev_utils/certs/ca.pem"
  # posix backend
  location: "dev_utils"
  copyHeader: "false"
  # sftp backend
  sftp:
    host: "localhost"
    port: "6222"
    userName: "user"
    pemKeyPath: "./dev_utils/certs/sftp-key.pem"
    pemKeyPass: "test"
    hostKey: ""

broker:
  host: "localhost"
  port: 5671
  user: "test"
  password: "test"
  vhost: "test"
  queue: ""
  exchange: "sda"
  routingKey: ""
  routingError: ""
  ssl: "true"
  verifyPeer: "true"
  cacert: "./dev_utils/certs/ca.pem"
  clientCert: "./dev_utils/certs/client.pem"
  clientKey: "./dev_utils/certs/client-key.pem"
# If the FQDN and hostname of the broker differ
# serverName can be set to the SAN name in the certificate
#  serverName: ""

c4gh:
  passphrase: "oaagCP1YgAZeEyl2eJAkHv9lkcWXWFgm"
  filepath: "./dev_utils/c4gh.sec.pem"
  backupPubKey: "./dev_utils/c4gh-new.pub.pem"

db:
  host: "localhost"
  port: 5432
  user: "lega_in"
  password: "lega_in"
  database: "lega"
  cacert: "./dev_utils/certs/ca.pem"
  clientCert: "./dev_utils/certs/client.pem"
  clientKey: "./dev_utils/certs/client-key.pem"
  sslmode: "verify-ca"

inbox:
  type: ""
  # S3 backend
  url: "https://localhost"
  port: 9000
  accesskey: "access"
  secretkey: "secretkey"
  bucket: "inbox"
  chunksize: 32
  cacert: "./dev_utils/certs/ca.pem"
  # posix backend
  location: "/inbox"

log:
  level: "debug"
  format: "json"
